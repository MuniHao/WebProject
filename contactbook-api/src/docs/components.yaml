# Common references
components: 
  schemas:
    Contact:
      type: object 
      properties:
        id:
          type: integer
          readOnly: true # Returned by HTTP GET 
        name:
          type: string 
          description: contact name
        email:
          type: string 
          format: email
          description: contact email
        address:
          type: string 
          description: contact address
        phone:
          type: string
          description: contact phone number 
        favorite:
          type: integer 
          enum: [0, 1]
          default: 0
          description: favorite contact 
        avatar:
          type: string
          readOnly: true # Returned by HTTP GET 
          description: contact avatar file path
        avatarFile:
          type: string 
          format: binary
          writeOnly: true # Used in POST/PUT/PATCH 
          description: contact avatar file
    Product:
      type: object
      properties:
        product_id:
          type: integer
          readOnly: true  # Returned by HTTP GET
          description: Unique identifier for the product
        product_name:
          type: string
          description: Name of the product (e.g., iPhone 16 Pro 256GB)
        product_price:
          type: number
          format: double
          description: Price of the product
        product_color:
          type: string
          description: Color of the product
        product_description:
          type: string
          description: Detailed description of the product
        product_image:
          type: string
          readOnly: true
          description: URL or path to product images (can store multiple images as a JSON array)
        product_imageFile:
          type: string
          format: binary
          writeOnly: true #USE TO POST,PUT,PATCH
          description: URL or path to product images file(can store multiple images as a JSON array)
    Customer:
      type: object
      properties:
        customer_id:
          type: integer
          readOnly: true  # Returned by HTTP GET
          description: Unique identifier for the customer
        customer_name:
          type: string
          description: Name of the customer
        customer_email:
          type: string
          format: email
          description: Email address of the customer
        customer_password:
          type: string
          format: password
          description: Password of the customer
        customer_phone:
          type: string
          description: Phone number of the customer
        customer_address:
          type: string
          description: Address of the customer
    
    PaginationMetadata:
      type: object
      properties:
        totalRecords:
          type: integer
          default: 0
          description: The total number of records
        firstPage:
          type: integer
          default: 1
          description: The first Page
        lastPage:
          type: integer
          default: 1
          description: The last Page
        page:
          type: integer
          default: 1
          description: The current Page
        limit:
          type: integer
          default: 5
          description: The number of records per page

  responses:
    '200NoData':
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                description: The response status
                enum:
                  -success
              data:
                type: object
                nullable: true
                default: null
                description: the response data
    '400BadRequest':
      description: Bad Request
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                description: The response status
                enum: [error]
              message:
                type: string
                description: Error message
    '404NotFound':
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                description: The response status
                enum: [error]
              message:
                type: string
                description: Error message
    '500ServerError':
      description: Internal Server Error
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                description: The response status
                enum: [error]
              message:
                type: string
                description: Error message

  parameters:
    productIdParam:
      name: product_id
      description: Product ID
      required: true
      in: path
      schema:
        type: integer      
  
    customerIdParam:
      name: customer_id
      description: customer ID
      required: true
      in: path
      schema:
        type: integer       
    
    limitParam:
      name: limit
      description: Number of records per page
      in: query
      schema:
        type: integer
        default: 5
        minimum: 1
        maximum: 100
      required: false
    
    pageParam:
      name: page
      description: Page number of records
      in: query
      schema:
        type: integer
        default: 1
        minimum: 1
      required: false
        